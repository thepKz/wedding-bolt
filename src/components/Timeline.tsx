import { motion } from 'framer-motion';


interface TimelineEvent {
  id: number;
  date: string;
  title: string;
  description: string;
  icon: string;
  position: 'left' | 'right';
}

const timelineEvents: TimelineEvent[] = [
  {
    id: 1,
    date: "Th√°ng 3, 2020",
    title: "L·∫ßn ƒê·∫ßu G·∫∑p Nhau",
    description: "Ch√∫ng t√¥i g·∫∑p nhau t·∫°i m·ªôt qu√°n c√† ph√™ nh·ªè ·ªü qu·∫≠n 1. ƒê√≥ l√† m·ªôt bu·ªïi chi·ªÅu m∆∞a nh·∫π, v√† c√≥ l·∫Ω ƒë√≥ l√† l√Ω do t·∫°i sao ch√∫ng t√¥i ·ªü l·∫°i l√¢u h∆°n d·ª± ƒë·ªãnh...",
    icon: "‚òï",
    position: "left"
  },
  {
    id: 2,
    date: "Th√°ng 6, 2020",
    title: "Cu·ªôc H·∫πn ƒê·∫ßu Ti√™n",
    description: "Chuy·∫øn ƒëi xem phim ƒë·∫ßu ti√™n c·ªßa ch√∫ng t√¥i. Anh ƒë√£ r·∫•t lo l·∫Øng v√† ƒë·∫øn s·ªõm 30 ph√∫t, c√≤n em th√¨ ƒë·∫øn mu·ªôn 15 ph√∫t v√† xin l·ªói c·∫£ trƒÉm l·∫ßn.",
    icon: "üé¨",
    position: "right"
  },
  {
    id: 3,
    date: "Th√°ng 12, 2020",
    title: "Ch√≠nh Th·ª©c Y√™u Nhau",
    description: "ƒê√™m Gi√°ng Sinh ƒë·∫∑c bi·ªát khi anh ch√≠nh th·ª©c n√≥i l·ªùi 'Anh y√™u em'. ƒê√≥ l√† m√≥n qu√† Gi√°ng Sinh ƒë·∫πp nh·∫•t m√† em t·ª´ng nh·∫≠n ƒë∆∞·ª£c.",
    icon: "üíï",
    position: "left"
  },
  {
    id: 4,
    date: "Th√°ng 8, 2022",
    title: "Chuy·∫øn Du L·ªãch ƒê·∫ßu Ti√™n",
    description: "Chuy·∫øn ƒëi ƒê√† L·∫°t c·ªßa ch√∫ng t√¥i - n∆°i c√≥ nh·ªØng con ƒë∆∞·ªùng hoa, kh√¥ng kh√≠ m√°t m·∫ª v√† bi·∫øt bao k·ª∑ ni·ªám ng·ªçt ng√†o. Ch√∫ng t√¥i ƒë√£ h·ª©a s·∫Ω quay l·∫°i ƒë√¢y m·ªói nƒÉm.",
    icon: "‚úàÔ∏è",
    position: "right"
  },
  {
    id: 5,
    date: "Th√°ng 2, 2024",
    title: "Ng√†y C·∫ßu H√¥n",
    description: "Anh ƒë√£ c·∫ßu h√¥n em t·∫°i n∆°i ch√∫ng ta g·∫∑p nhau l·∫ßn ƒë·∫ßu - qu√°n c√† ph√™ nh·ªè ƒë√≥. Em ƒë√£ kh√≥c v√† n√≥i 'C√≥' m√† kh√¥ng c·∫ßn suy nghƒ©.",
    icon: "üíç",
    position: "left"
  },
  {
    id: 6,
    date: "Th√°ng 6, 2025",
    title: "Ng√†y C∆∞·ªõi",
    description: "H√¥m nay - ng√†y m√† ch√∫ng t√¥i ch√≠nh th·ª©c tr·ªü th√†nh m·ªôt gia ƒë√¨nh. C·∫£m ∆°n t·∫•t c·∫£ nh·ªØng ng∆∞·ªùi ƒë√£ ƒë·∫øn chung vui c√πng ch√∫ng t√¥i!",
    icon: "üíí",
    position: "right"
  }
];

const Timeline = () => {
  return (
    <section className="relative min-h-screen bg-gradient-to-br from-indigo-50 via-purple-50 to-pink-50 py-20">
      {/* Background decorations */}
      <div className="absolute inset-0 overflow-hidden">
        <div className="absolute top-20 left-20 w-32 h-32 bg-indigo-300/20 rounded-full blur-3xl"></div>
        <div className="absolute bottom-20 right-20 w-40 h-40 bg-purple-300/20 rounded-full blur-3xl"></div>
        <div className="absolute top-1/2 left-1/2 transform -translate-x-1/2 -translate-y-1/2 w-60 h-60 bg-pink-300/10 rounded-full blur-3xl"></div>
      </div>

      <div className="relative z-10 max-w-6xl mx-auto px-6">
        {/* Header */}
        <motion.div
          className="text-center mb-16"
          initial={{ opacity: 0, y: 30 }}
          animate={{ opacity: 1, y: 0 }}
          transition={{ duration: 0.8 }}
        >
          <div className="flex items-center justify-center gap-4 mb-6">
            <div className="w-20 h-px bg-gradient-to-r from-transparent via-purple-400 to-transparent"></div>
            <span className="text-3xl">üìñ</span>
            <div className="w-20 h-px bg-gradient-to-r from-transparent via-purple-400 to-transparent"></div>
          </div>
          
          <h2 className="text-4xl md:text-6xl font-serif text-gray-800 mb-4">
            <span className="bg-gradient-to-r from-indigo-600 via-purple-600 to-pink-600 bg-clip-text text-transparent">
              H√†nh Tr√¨nh T√¨nh Y√™u
            </span>
          </h2>
          
          <p className="text-xl text-gray-600 max-w-2xl mx-auto">
            T·ª´ nh·ªØng ng√†y ƒë·∫ßu g·∫∑p g·ª° ƒë·∫øn ng√†y h√¥m nay - c√¢u chuy·ªán c·ªßa ch√∫ng t√¥i üíï
          </p>
        </motion.div>

        {/* Timeline */}
        <div className="relative">
          {/* Central line */}
          <div className="absolute left-1/2 transform -translate-x-1/2 w-1 h-full bg-gradient-to-b from-indigo-300 via-purple-300 to-pink-300 rounded-full"></div>

          <div className="space-y-16">
            {timelineEvents.map((event, index) => (
              <motion.div
                key={event.id}
                className={`flex items-center ${event.position === 'left' ? 'justify-start' : 'justify-end'}`}
                initial={{ opacity: 0, x: event.position === 'left' ? -50 : 50 }}
                animate={{ opacity: 1, x: 0 }}
                transition={{ duration: 0.8, delay: index * 0.2 }}
              >
                <div className={`w-5/12 ${event.position === 'left' ? 'text-right pr-8' : 'text-left pl-8'}`}>
                  <div className="bg-white/80 backdrop-blur-sm rounded-3xl p-8 shadow-xl border border-purple-200/50 relative">
                    {/* Arrow */}
                    <div className={`absolute top-8 ${event.position === 'left' ? 'right-0 translate-x-1/2' : 'left-0 -translate-x-1/2'} w-4 h-4 bg-white border border-purple-200/50 rotate-45`}></div>
                    
                    {/* Content */}
                    <div className="space-y-4">
                      <div className="flex items-center gap-3 justify-center">
                        <span className="text-3xl">{event.icon}</span>
                        <div>
                          <p className="text-sm text-purple-600 font-medium">{event.date}</p>
                          <h3 className="text-xl font-serif text-gray-800">{event.title}</h3>
                        </div>
                      </div>
                      
                      <p className="text-gray-600 leading-relaxed">{event.description}</p>
                    </div>
                  </div>
                </div>

                {/* Timeline dot */}
                <motion.div
                  className="absolute left-1/2 transform -translate-x-1/2 w-6 h-6 bg-gradient-to-r from-purple-400 to-pink-400 rounded-full border-4 border-white shadow-lg z-10"
                  initial={{ scale: 0 }}
                  animate={{ scale: 1 }}
                  transition={{ duration: 0.5, delay: index * 0.2 + 0.3 }}
                >
                  <motion.div
                    className="w-full h-full bg-gradient-to-r from-purple-500 to-pink-500 rounded-full"
                    animate={{ scale: [1, 1.2, 1] }}
                    transition={{ duration: 2, repeat: Infinity, delay: index * 0.5 }}
                  />
                </motion.div>
              </motion.div>
            ))}
          </div>
        </div>

        {/* Bottom message */}
        <motion.div
          className="text-center mt-16"
          initial={{ opacity: 0, y: 20 }}
          animate={{ opacity: 1, y: 0 }}
          transition={{ duration: 0.8, delay: 1.5 }}
        >
          <div className="bg-gradient-to-r from-purple-100 to-pink-100 rounded-3xl p-8 border border-purple-200/50">
            <div className="flex items-center justify-center gap-4 mb-4">
              <div className="w-16 h-px bg-gradient-to-r from-transparent via-purple-400 to-transparent"></div>
              <span className="text-2xl">üåü</span>
              <div className="w-16 h-px bg-gradient-to-r from-transparent via-purple-400 to-transparent"></div>
            </div>
            
            <h3 className="text-2xl font-serif text-gray-800 mb-4">V√† C√¢u Chuy·ªán Ti·∫øp T·ª•c...</h3>
            <p className="text-gray-600 text-lg max-w-2xl mx-auto">
              H√¥m nay ch·ªâ l√† kh·ªüi ƒë·∫ßu cho m·ªôt ch∆∞∆°ng m·ªõi trong cu·ªôc ƒë·ªùi ch√∫ng t√¥i. 
              C·∫£m ∆°n b·∫°n ƒë√£ l√† m·ªôt ph·∫ßn trong h√†nh tr√¨nh n√†y! üíñ
            </p>
          </div>
        </motion.div>
      </div>

      {/* Floating elements */}
      <div className="absolute inset-0 pointer-events-none overflow-hidden">
        {[...Array(8)].map((_, i) => (
          <motion.div
            key={i}
            className="absolute text-purple-300/20"
            style={{
              left: `${Math.random() * 100}%`,
              top: `${Math.random() * 100}%`,
              fontSize: `${Math.random() * 20 + 10}px`,
            }}
            animate={{
              y: [0, -30, 0],
              rotate: [0, 180, 360],
              opacity: [0.2, 0.5, 0.2],
            }}
            transition={{
              duration: Math.random() * 8 + 10,
              repeat: Infinity,
              delay: Math.random() * 5,
            }}
          >
            ‚≠ê
          </motion.div>
        ))}
      </div>
    </section>
  );
};

export default Timeline; 